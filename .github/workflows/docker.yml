name: Build and Publish Docker Image

on:
  push:
    branches: [ '**' ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ '**' ]
  release:
    types: [ created ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        platform: [linux/amd64]
        # platform: [linux/amd64, linux/arm64]  # ARM64 temporarily disabled due to segfaults

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Determine OpenFHE version
      id: openfhe-version
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "version=main" >> $GITHUB_OUTPUT
          echo "ref=main" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
          # Extract version from tag (e.g., v1.0.0 -> 1.0.0)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "ref=v$VERSION" >> $GITHUB_OUTPUT
        else
          # For other branches, use main branch for OpenFHE but keep branch name for version
          BRANCH=${GITHUB_REF#refs/heads/}
          echo "version=$BRANCH" >> $GITHUB_OUTPUT
          echo "ref=main" >> $GITHUB_OUTPUT
        fi

    - name: Determine if should push to registry
      id: should-push
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == refs/tags/v* ]]; then
          echo "push=true" >> $GITHUB_OUTPUT
        else
          echo "push=false" >> $GITHUB_OUTPUT
        fi

    - name: Log in to Container Registry
      if: steps.should-push.outputs.push == 'true' && github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Prepare platform suffix
      id: platform
      run: |
        platform_suffix=$(echo "${{ matrix.platform }}" | sed 's/\//-/g')
        echo "suffix=$platform_suffix" >> $GITHUB_OUTPUT

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable=${{ steps.should-push.outputs.push == 'true' }}
        labels: |
          org.opencontainers.image.title=OpenFHE Buildbox
          org.opencontainers.image.description=Docker base image with pre-built OpenFHE libraries
          org.opencontainers.image.vendor=Matias Insaurralde
          org.opencontainers.image.source={{repo}}
          org.opencontainers.image.version={{version}}
          org.opencontainers.image.revision={{sha}}
          openfhe.version=${{ steps.openfhe-version.outputs.version }}
          openfhe.platform=${{ matrix.platform }}

    - name: Build and push Docker image
      if: steps.should-push.outputs.push == 'true' && github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ matrix.platform }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}-${{ steps.platform.outputs.suffix }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          OPENFHE_VERSION=${{ steps.openfhe-version.outputs.version }}
          OPENFHE_REF=${{ steps.openfhe-version.outputs.ref }}

    - name: Build Docker image (no push)
      if: steps.should-push.outputs.push != 'true' || github.event_name == 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ matrix.platform }}
        push: false
        tags: ${{ steps.meta.outputs.tags }}-${{ steps.platform.outputs.suffix }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          OPENFHE_VERSION=${{ steps.openfhe-version.outputs.version }}
          OPENFHE_REF=${{ steps.openfhe-version.outputs.ref }}

    - name: Create and push manifests
      if: steps.should-push.outputs.push == 'true' && github.event_name != 'pull_request'
      run: |
        echo "Creating manifests for: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "Creating manifests for main branch..."
          # Since we're only building for AMD64, we don't need to create manifests
          # The build step already created the clean tags: main and latest
          echo "Manifests already created by build step for main branch"
        elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Creating manifests for version tag: $VERSION"
          # Since we're only building for AMD64, we don't need to create manifests
          # The build step already created the clean tags: version and latest
          echo "Manifests already created by build step for version $VERSION"
          
          # Also create major.minor manifest
          MAJOR_MINOR=$(echo $VERSION | sed 's/\.[0-9]*$//')
          echo "Creating major.minor manifest: $MAJOR_MINOR"
          # For single architecture, we can just tag the version as major.minor
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$MAJOR_MINOR
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$MAJOR_MINOR
        fi

 